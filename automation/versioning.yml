trigger: none

pool:
  vmImage: 'vs2017-win2016'

variables:
  version_file: './automation/version'

steps:
- task: PowerShell@2
  env:
    PAT: $(PAT)
  inputs:
    targetType: 'inline'
    script: |
      $Token = $env:PAT
      $Base64Token = [System.Convert]::ToBase64String([char[]]$Token)

      $Headers = @{
          Authorization = 'Basic {0}' -f $Base64Token;
          }

      $ReleaseList = (Invoke-RestMethod -Headers $Headers -Uri https://api.github.com/repos/epam/sitecore-headless-commerce-accelerator/branches -Method Get).name | Where-Object { $_.Contains("release")}
      $LastReleaseNumber = $ReleaseList[-1].Split("/")[1]
      $MajorVersionNumber = $LastReleaseNumber.Split(".")[0]
      $MinorVersionNumber = $LastReleaseNumber.Split(".")[1]/1 + 1
      $PatchVersionNumber = $LastReleaseNumber.Split(".")[2]
      $VersionNumber = $MajorVersionNumber + "." + $MinorVersionNumber + "." + $PatchVersionNumber

      $PreviousRelease = Get-Content $(version_file)

      if ($VersionNumber -eq $PreviousRelease.Split("-")[0]) {
        $NewReleaseNumber = $PreviousRelease.Split(".")[-1]/1 + 1
        $PreviousRelease - replace "$(branch_revision).*", "$(branch_revision).$NewReleaseNumber" | Set-Content $(version_file)
      }
      else {
        $BranchVersionNumber = $VersionNumber + "-" + $(branch_revision) + ".1"
        Set-Content $(version_file) $BranchVersionNumber 
      }

      $CurrentRelease = Get-Content $(version_file)

      Write-Host "##vso[build.updatebuilnumber]$CurrentRelease"